'use strict';

var React = require('react');

var _require = require('react-router'),
    Router = _require.Router,
    Route = _require.Route,
    Redirect = _require.Redirect,
    browserHistory = _require.browserHistory,
    hashHistory = _require.hashHistory;

var objectWith = require('./utils/objectWith');
var objectWithout = require('./utils/objectWithout');
var asyncComponent = require('./utils/asyncComponent');

function getRoute(route, index) {
  var path = route.path,
      component = route.component,
      to = route.to;

  if (to) {
    var _props = objectWith(route, 'to', 'from');
    if (_props.from === undefined) _props.from = path;
    return React.createElement(Redirect, Object.assign({ key: index }, _props));
  }

  var props = objectWithout(route, 'to', 'from', 'component');
  component = React.isValidElement(component) ? component : asyncComponent(component);

  return React.createElement(Route, Object.assign({ component: component, key: index }, props));
}

module.exports = function router(config) {
  var _config$routes = config.routes,
      routes = _config$routes === undefined ? [] : _config$routes,
      _config$history = config.history,
      history = _config$history === undefined ? 'browserHistory' : _config$history;


  var routerProps = objectWithout(config, 'routes', 'history');
  routerProps.history = { browserHistory: browserHistory, hashHistory: hashHistory }[history];

  return React.createElement(Router, routerProps, routes.map(getRoute));
};