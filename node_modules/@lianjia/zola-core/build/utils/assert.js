'use strict';

/**
 * [assert 错误检查，如果命中抛异常]
 * @param  {Boolean} 错误检查
 * @param  {String}  输出信息模版
 * @param  {...any}  模版的参数
 */

function assert() {
  var error = assertError.apply(undefined, arguments);
  if (error) throw error;
}

function warn() {
  var error = assertError.apply(undefined, arguments);
  if (error) console.warn(error);
}

function assertError(expression, message) {
  for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    args[_key - 2] = arguments[_key];
  }

  if (expression !== true) return;
  var index = 0;
  message = message.replace(/%s/g, function () {
    return parseValue(args[index++]);
  });
  return new Error('Bucky: ' + message);
}

function parseValue(value) {
  try {
    return JSON.stringify(value);
  } catch (e) {
    return value + '';
  }
}

module.exports = Object.assign(assert, { assertError: assertError, warn: warn });