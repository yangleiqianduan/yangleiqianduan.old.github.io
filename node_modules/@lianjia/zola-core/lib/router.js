const React = require('react')
const {
  Router, Route, Redirect, browserHistory, hashHistory
} = require('react-router')
const objectWith = require('./utils/objectWith')
const objectWithout = require('./utils/objectWithout')
const asyncComponent = require('./utils/asyncComponent')

function getRoute (route, index) {
  let { path, component, to } = route
  if (to) {
    const props = objectWith(route, 'to', 'from')
    if (props.from === undefined) props.from = path
    return React.createElement(Redirect, Object.assign({key: index}, props))
  }

  const props = objectWithout(route, 'to', 'from', 'component')
  component = React.isValidElement(component) ?
    component : asyncComponent(component)

  return React.createElement(Route, Object.assign({component, key: index}, props))
}

module.exports = function router (config) {
  const { routes = [], history = 'browserHistory' } = config

  const routerProps = objectWithout(config, 'routes', 'history')
  routerProps.history = ({browserHistory, hashHistory})[history]

  return React.createElement(Router, routerProps, routes.map(getRoute))
}